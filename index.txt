
MPLW - Matplotlib  AsciiDoc filter
==================================

include::summary.txt[]


Examples
--------

Let say we need sin() chart like this:
include::example-sin.txt[]
We just need to include following MPL code snippet:
---------------------------------------
include::example-sin.txt[]
---------------------------------------
Asciidoc will send inline python code between "----" lines to stdin of mplw.py, and then insert produced PNG into html. 

Now let say we have some data from two experiments and we need a chart like this:
include::example-data.txt[]
Following snippet inside asciidoc will do this:
---------------------------------------
include::example-data.txt[]
---------------------------------------

Text after +"____"+ is plot data in table form.  The c[][] is matrix where c[0] is vector
holding 1st col from above table, c[1] is second column and so on.

+
This page is made with asciidoc, you can see how it was made: 

* http://github.com/lvv/mplw/blob/master/index.txt[source code of this page]
* http://github.com/lvv/mplw/blob/master/example-sin.txt[example-sin.txt]
* http://github.com/lvv/mplw/blob/master/example-data.txt[example-data.txt]
        

How MPLW API differ from MPL
----------------------------

MPL was somewhat simplified and extended for use as AsciiDoc filter.

Python inline code evaluated in environment with following modules imported without namespace:
-------------------------------
from matplotlib.pyplot import *                                                                                                          
from numpy import *                                                                                                          
-------------------------------

After MPL inline code evaluated,  mplw.py executes code which writes PNG file.

If there is inline plot data, MPLW fills in 'c' matrix.  If entry looks like number it is converted to float. 

Also if lvv_style is enabled (default), MPLW adjust figure borders sizes  (mpl does
not do it automatically), enables grid and sets figure background to light grey. 

There is plotting function 'benchmark' based on 'barh'.  It should probably be
in MPL code not in MPLW. I will send patch to MPL project.
See also http://volnitsky.com/project/lvvlib/array[example usage of benchmark]



Install
-------

---------------------------------------------
emerge -u matplotlib asciidoc git
git clone git://github.com/lvv/mplw.git
cd mplw.git
make install  # this will create 2 files: /etc/asciidoc/filters/mpl/{mpl.conf,mplw.py}
---------------------------------------------

Replace `emerge` with your distro package manager.


About
-----
MPLW is based on GNU licensed graphviz2png.py by Gouichi
Iisaka.  I actully don't know python.  I've just replaced small section in it
(marked with ### ###, search for "lvv"),  did a lot of
"s/graphviz/mpl/", found some sample code on the net for reading files in
python and cobbled up the mplw.py (matplotlib wrapper).

Todo
----
* When mplw.py used not as asciidoc filter:
  - if title not set take file name as title
  - if multiple input files specirfied: make one overlayed chart
* http://ditaa.sourceforge.net[DIagrams Through Ascii Art]

.References
- [[[1]]]   http://www.methods.co.nz/asciidoc/asciidoc-graphviz-sample.html[Graphviz filter for AsciiDoc]
- [[[2]]]   http://matplotlib.sourceforge.net[MatPlotLib]

// vim:ts=8 ft=asciidoc:
